apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cdash
  name: cdash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cdash
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cdash
    spec:
      containers:
        - env:
            - name: APP_NAME
              value: CDash
            - name: APP_ENV
              value: {{ .Values.application.env }}
            - name: ADMIN_INSTITUTION
              value: {{ .Values.application.institution | quote }}
            {{- if .Values.application.password }}
            - name: ADMIN_PASSWORD
              value: {{ .Values.application.password }}
            {{- end}}
            {{- if .Values.application.password_secret }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application.password_secret }}
                  key: password
            {{- end}}
            - name: APP_DEBUG
              value: "true"
            - name: APP_URL
              value: "{{ .Values.application.protocol }}://{{ .Values.application.host }}"
            - name: APP_KEY
              value: {{ .Values.application.appkey }}
            - name: DB_CONNECTION
              value: {{ .Values.database.connection }}
            - name: DB_DATABASE
              value: {{ .Values.database.name }}
            - name: DB_HOST
              value: {{ .Values.database.host }}
            - name: DB_USERNAME
              value: {{ .Values.database.username }}
            - name: DB_PASSWORD
              value: {{ .Values.database.password }}
            - name: DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: MIX_APP_URL
              value: "{{ .Values.application.protocol }}://{{ .Values.application.host }}"
            - name: QUEUE_CONNECTION
              value: {{ .Values.worker.connection }}
            - name: REMOTE_WORKERS
              value: {{ .Values.worker.remote | quote }}
        {{- if .Values.ldap.enabled }}
            - name: CDASH_AUTHENTICATION_PROVIDER
              value: ldap
            - name: USERNAME_PASSWORD_AUTHENTICATION_ENABLED
              value: "true"
            - name: USER_REGISTRATION_FORM_ENABLED
              value: "false"
            - name: LDAP_HOSTS
              value: {{ .Values.ldap.hosts }}
            - name: LDAP_BASE_DN
              value: {{ .Values.ldap.basedn }}
            - name: LDAP_USERNAME
              value: {{ .Values.ldap.username }}
            {{- if .Values.ldap.password  }}
            - name: LDAP_PASSWORD
              value: {{ .Values.ldap.password  }}
            {{- end}}
            {{- if .Values.ldap.password_secret }}
            - name: LDAP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ldap.password_secret }}
                  key: ldap_password
            {{- end}}
            - name: LDAP_LOGGING
              value: {{ .Values.ldap.logging | quote }}
            - name: LDAP_FILTERS_ON
              value: {{ .Values.ldap.filters }}
            - name: LDAP_PROVIDER
              value: {{ .Values.ldap.provider }}
            - name: LDAP_TIMEOUT
              value: {{ .Values.ldap.timeout | quote }}
        {{- end}}
          image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
          livenessProbe:
            exec:
              command:
                - ps aux | grep apache2 | grep -v grep > /dev/null
            failureThreshold: 20
            periodSeconds: 5
            timeoutSeconds: 10
          name: cdash
          ports:
            - containerPort: {{ .Values.application.port }}
              hostPort: {{ .Values.application.port }}
              protocol: TCP
          resources: {}
          volumeMounts:
        {{- if .Values.application.tls }}
            - name: cdash-my-cert-pem
              mountPath: "/var/www/my-cert.pem"
              subPath: my-cert.pem
              readOnly: false
            - name: cdash-my-cert-key
              mountPath: "/var/www/my-cert.key"
              subPath: my-cert.key
              readOnly: false
        {{- end}}
            - mountPath: /cdash/storage
              name: cdashdata
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "php artisan storage:mkdirs"]
      restartPolicy: Always
      volumes:
      {{- if .Values.application.tls }}
        - name: cdash-my-cert-key
          configMap:
            name: {{ .Values.application.key_secret | default "my-cert.key" }}
        - name: cdash-my-cert-pem
          configMap:
            name: {{ .Values.application.pem_secret | default "my-cert.key" }}
      {{- end}}
        - name: cdashdata
          persistentVolumeClaim:
            claimName: cdashdata
status: {}
